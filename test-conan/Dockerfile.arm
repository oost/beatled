# syntax=docker/dockerfile:1
FROM ubuntu as build
ARG boost_libs
ARG boost_libs=none

# Prepare build environment
RUN apt-get update && \
  apt-get -qq -y install gcc g++ \
  cmake curl wget pkg-config zip unzip tar \
  libtool python3 python3-pip

# RUN pip3 install --upgrade cmake
RUN pip3 install conan && \
  conan remote add stiffstream https://api.bintray.com/conan/stiffstream/public && \
  conan remote add public-conan https://api.bintray.com/conan/bincrafters/public-conan


WORKDIR /home
RUN curl -L https://github.com/rvagg/rpi-newer-crosstools/archive/eb68350c5c8ec1663b7fe52c742ac4271e3217c5.tar.gz -o rpi-toolchain.tar.gz && \
  mkdir -p /home/toolchains && \
  tar xzf rpi-toolchain.tar.gz -C /home/toolchains && \
  mv /home/toolchains/rpi-newer-crosstools-eb68350c5c8ec1663b7fe52c742ac4271e3217c5 /home/toolchains/arm-rpi-linux-gnueabihf



WORKDIR /home
RUN mkdir restinio-conan-example
COPY *.cpp restinio-conan-example/
COPY conanfile.txt restinio-conan-example
COPY CMakeLists.txt restinio-conan-example


WORKDIR /home
RUN echo "*** Building an example ***" \
  && cd restinio-conan-example \
  && mkdir build \
  && cd build \
  && conan install --install-folder cmake-build-release --build=missing .. 


WORKDIR /home/restinio-conan-example/build

RUN ARMCC_PREFIX=/home/toolchains/arm-rpi-linux-gnueabihf/x64-gcc-6.5.0/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf- \
  ARMCC_FLAGS="-march=armv6 -mfpu=vfp -funsafe-math-optimizations" \
  cmake -DCMAKE_C_COMPILER=${ARMCC_PREFIX}gcc \
  -DCMAKE_CXX_COMPILER=${ARMCC_PREFIX}g++ \
  -DCMAKE_C_FLAGS="${ARMCC_FLAGS}" \
  -DCMAKE_CXX_FLAGS="${ARMCC_FLAGS}" \
  -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
  -DCMAKE_SYSTEM_NAME=Linux \
  -DCMAKE_SYSTEM_PROCESSOR=armv6 \
  # -DCMAKE_TOOLCHAIN_FILE=cmake-build-release/conan_toolchain.cmake \
  -DCMAKE_BUILD_TYPE=Release \
  ..\
  && cmake --build . --config Release

EXPOSE 8080

WORKDIR /home/restinio-conan-example/build



FROM scratch AS export
COPY --from=build /home/restinio-conan-example/build .
